# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html

[build-system]
build-backend = "flit_core.buildapi"
requires = ["flit_core >=3.2,<4"]

[project]
authors = [
  {name = "gdsfactory", email = "contact@gdsfactory.com"}
]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Operating System :: OS Independent"
]
dependencies = [
  "gdsfactory==7.25.1",
  "PySpice"
]
description = "skywater130 pdk"
keywords = ["python"]
license = {file = "LICENSE"}
name = "sky130"
readme = "README.md"
requires-python = ">=3.10"
version = "0.10.1"

[project.optional-dependencies]
dev = [
  "pytest",
  "pytest-cov",
  "pytest_regressions",
  "pre-commit"
]
docs = [
  "jupytext",
  "jupyter-book==1.0.0"
]

[tool.mypy]
python_version = "3.10"
strict = true

[tool.pydocstyle]
add-ignore = ["D100", "D101", "D102", "D103", "D104", "D203", "D405", "D417"]
convention = "google"
inherit = false
match = "(?!test).*\\.py"

[tool.pylsp-mypy]
enabled = true
live_mode = true
strict = true

[tool.pytest.ini_options]
# addopts = --tb=no
# addopts = '--tb=short'
python_files = ["sky130/*.py", "tests/*.py"]
testpaths = ["sky130", "tests"]

[tool.ruff]
fix = true
ignore = [
  "E501",  # line too long, handled by black
  "B008",  # do not perform function calls in argument defaults
  "C901",  # too complex
  "B905",  # `zip()` without an explicit `strict=` parameter
  "C408"  # C408 Unnecessary `dict` call (rewrite as a literal)
]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "C",  # flake8-comprehensions
  "B",  # flake8-bugbear
  "UP"
]

[tool.ruff.per-file-ignores]
"docs/notebooks/intro.py" = ['B018']

[tool.setuptools.package-data]
mypkg = ["*.csv", "*.yaml"]

[tool.setuptools.packages]
find = {}

[tool.tbump]

[[tool.tbump.before_commit]]
cmd = "towncrier build --yes --version {new_version}"
name = "create & check changelog"

[[tool.tbump.before_commit]]
cmd = "git add CHANGELOG.md"
name = "create & check changelog"

[[tool.tbump.before_commit]]
cmd = "grep -q -F {new_version} CHANGELOG.md"
name = "create & check changelog"

[[tool.tbump.file]]
src = "README.md"

[[tool.tbump.file]]
src = "pyproject.toml"

[[tool.tbump.file]]
src = "sky130/__init__.py"

[[tool.tbump.file]]
src = "sky130/klayout/pymacros/set_menus.lym"

[[tool.tbump.file]]
src = "sky130/klayout/grain.xml"

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[tool.tbump.version]
current = "0.10.1"
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  '''

[tool.towncrier]
directory = ".changelog.d"
filename = "CHANGELOG.md"
issue_format = "[#{issue}](https://github.com/gdsfactory/skywater130/issues/{issue})"
package = "gdsfactory"
start_string = "<!-- towncrier release notes start -->\n"
template = ".changelog.d/changelog_template.jinja"
title_format = "## [{version}](https://github.com/gdsfactory/skywater130/releases/tag/v{version}) - {project_date}"
underlines = ["", "", ""]

[[tool.towncrier.type]]
directory = "security"
name = "Security"
showcontent = true

[[tool.towncrier.type]]
directory = "removed"
name = "Removed"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Fixed"
showcontent = true
